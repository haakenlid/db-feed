!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AbcNyheter	src/logos/full/AbcNyheter.js	/^const AbcNyheter = props => ($/;"	r
AbcNyheter	src/logos/icons/AbcNyheter.js	/^const AbcNyheter = props => ($/;"	r
Adresseavisen	src/logos/full/Adresseavisen.js	/^const Adresseavisen = props => ($/;"	r
Adresseavisen	src/logos/icons/Adresseavisen.js	/^const Adresseavisen = props => ($/;"	r
Aftenposten	src/logos/full/Aftenposten.js	/^const Aftenposten = props => ($/;"	r
Aftenposten	src/logos/icons/Aftenposten.js	/^const Aftenposten = props => ($/;"	r
BASE_URL	src/services/api.js	/^const BASE_URL = 'https:\/\/harvester.sol.no\/get'$/;"	r
BergensTidende	src/logos/full/BergensTidende.js	/^const BergensTidende = props => ($/;"	r
BergensTidende	src/logos/icons/BergensTidende.js	/^const BergensTidende = props => ($/;"	r
DEBOUNCE	src/sagas.js	/^  const DEBOUNCE = 500$/;"	r
Dagbladet	src/logos/full/Dagbladet.js	/^const Dagbladet = props => ($/;"	r
Dagbladet	src/logos/icons/Dagbladet.js	/^const Dagbladet = props => ($/;"	r
Dagsavisen	src/logos/full/Dagsavisen.js	/^const Dagsavisen = props => ($/;"	r
Dagsavisen	src/logos/icons/Dagsavisen.js	/^const Dagsavisen = props => ($/;"	r
Dn	src/logos/full/Dn.js	/^const Dn = props => ($/;"	r
Dn	src/logos/icons/Dn.js	/^const Dn = props => ($/;"	r
FEED_RECEIVED	src/ducks/feed.js	/^export const FEED_RECEIVED = 'FEED_RECEIVED'$/;"	r
FEED_REQUESTED	src/ducks/feed.js	/^export const FEED_REQUESTED = 'FEED_REQUESTED'$/;"	r
FEED_REQUEST_FAILED	src/ducks/feed.js	/^export const FEED_REQUEST_FAILED = 'FEED_REQUEST_FAILED'$/;"	r
FEED_RESET_OFFSET	src/ducks/feed.js	/^export const FEED_RESET_OFFSET = 'FEED_RESET_OFFSET'$/;"	r
Faedrelandsvennen	src/logos/full/Faedrelandsvennen.js	/^const Faedrelandsvennen = props => ($/;"	r
Faedrelandsvennen	src/logos/icons/Faedrelandsvennen.js	/^const Faedrelandsvennen = props => ($/;"	r
Feed	src/components/Feed.js	/^const Feed = ({ active, feedRequested }) => ($/;"	r
Filters	src/components/Filters.js	/^const Filters = ({ tags, hosts, toggleHost, toggleTag, onlyHost }) => ($/;"	r
Hegnar	src/logos/full/Hegnar.js	/^const Hegnar = props => ($/;"	r
Host	src/components/Filters.js	/^const Host = ({ name, active, ...props }) => ($/;"	r
INITIAL_STATE	src/ducks/feed.js	/^const INITIAL_STATE = {$/;"	r
INITIAL_STATE	src/ducks/hosts.js	/^const INITIAL_STATE = {$/;"	r
INITIAL_STATE	src/ducks/tags.js	/^const INITIAL_STATE = {$/;"	r
Icon	src/logos/index.js	/^export const Icon = ({ host, ...props }) =>$/;"	r
LoadingIndicator	src/components/LoadingIndicator.js	/^const LoadingIndicator = ({ fetching }) => ($/;"	r
Logo	src/logos/index.js	/^export const Logo = ({ host, ...props }) =>$/;"	r
Nrk	src/logos/full/Nrk.js	/^const Nrk = props => ($/;"	r
Nrk	src/logos/icons/Nrk.js	/^const Nrk = props => ($/;"	r
ONLY_HOST	src/ducks/hosts.js	/^export const ONLY_HOST = 'hosts\/ONLY_HOST'$/;"	r
SLICE	src/ducks/feed.js	/^const SLICE = 'feed'$/;"	r
SLICE	src/ducks/hosts.js	/^const SLICE = 'hosts'$/;"	r
SLICE	src/ducks/tags.js	/^const SLICE = 'tags'$/;"	r
ScrollSpy	src/components/ScrollSpy.js	/^class ScrollSpy extends React.Component {$/;"	r
StavangerAftenblad	src/logos/full/StavangerAftenblad.js	/^const StavangerAftenblad = props => ($/;"	r
StavangerAftenblad	src/logos/icons/StavangerAftenblad.js	/^const StavangerAftenblad = props => ($/;"	r
Story	src/components/Story.js	/^const Story = ({ title, description, image, host, content, posted }) => ($/;"	r
TOGGLE_HOST	src/ducks/hosts.js	/^export const TOGGLE_HOST = 'hosts\/TOGGLE_HOST'$/;"	r
TOGGLE_TAG	src/ducks/tags.js	/^export const TOGGLE_TAG = 'tags\/TOGGLE_TAG'$/;"	r
Tag	src/components/Filters.js	/^const Tag = ({ name, active, ...props }) => ($/;"	r
Tv2	src/logos/full/Tv2.js	/^const Tv2 = props => ($/;"	r
Tv2	src/logos/icons/Tv2.js	/^const Tv2 = props => ($/;"	r
Vg	src/logos/full/Vg.js	/^const Vg = props => ($/;"	r
Vg	src/logos/icons/Vg.js	/^const Vg = props => ($/;"	r
buildUrl	src/services/url.js	/^export const buildUrl = R.curryN(2, (baseurl = '', params) =>$/;"	r
cleanValues	src/services/url.js	/^export const cleanValues = R.pipe($/;"	r
cleanedData	src/services/api.test.js	/^  const cleanedData = normalizeData(apidata)$/;"	r
composeEnhancers	src/configureStore.js	/^const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose$/;"	r
debounce	src/components/ScrollSpy.js	/^const debounce = (func, wait) => {$/;"	r
entry	src/services/api.test.js	/^  const entry = R.values(cleanedData)[0]$/;"	r
feedReceived	src/ducks/feed.js	/^export const feedReceived = payload => ({ type: FEED_RECEIVED, payload })$/;"	r
feedRequestFailed	src/ducks/feed.js	/^export const feedRequestFailed = error => ({ type: FEED_REQUEST_FAILED, error })$/;"	r
feedRequested	src/ducks/feed.js	/^export const feedRequested = payload => ({ type: FEED_REQUESTED, payload })$/;"	r
feedResetOffset	src/ducks/feed.js	/^export const feedResetOffset = () => ({ type: FEED_RESET_OFFSET })$/;"	r
fetchFeed	src/services/api.js	/^export const fetchFeed = params =>$/;"	r
formatDate	src/services/text.js	/^export const formatDate = (value, locale = norwayLocale) =>$/;"	r
getReducer	src/ducks/hosts.js	/^const getReducer = ({ type, payload }) => {$/;"	r
getReducer	src/ducks/tags.js	/^const getReducer = ({ type, payload }) => {$/;"	r
installingWorker	src/registerServiceWorker.js	/^        const installingWorker = registration.installing;$/;"	r
isEmpty	src/services/url.js	/^const isEmpty = R.contains(R.__, [{}, undefined, null, [], ''])$/;"	r
isLocalhost	src/registerServiceWorker.js	/^const isLocalhost = Boolean($/;"	r
isVisible	src/components/Feed.js	/^const isVisible = element => {$/;"	r
items	src/ducks/feed.js	/^      const items = R.merge(state.items, payload)$/;"	r
keys	src/ducks/feed.js	/^      const keys = R.keys(payload)$/;"	r
mapDispatchToProps	src/components/Filters.js	/^const mapDispatchToProps = {$/;"	r
mapObject	src/services/url.js	/^const mapObject = fn =>$/;"	r
mapStateToProps	src/components/Filters.js	/^const mapStateToProps = (state, ownProps) => ({$/;"	r
normalizeData	src/services/api.js	/^export const normalizeData = R.pipe($/;"	r
onlyHost	src/ducks/hosts.js	/^export const onlyHost = host => ({$/;"	r
paramPairs	src/services/url.js	/^export const paramPairs = (key, value) =>$/;"	r
params	src/sagas.js	/^  const params = yield select(selectFeedParameters)$/;"	r
publicUrl	src/registerServiceWorker.js	/^    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);$/;"	r
queryString	src/services/url.js	/^const queryString = R.pipe($/;"	r
rect	src/components/Feed.js	/^  const rect = element.getBoundingClientRect()$/;"	r
render	src/index.js	/^const render = App => {$/;"	r
rootElement	src/index.js	/^const rootElement = document.getElementById('root')$/;"	r
rootReducer	src/configureStore.js	/^  const rootReducer = combineReducers({ feed, tags, hosts })$/;"	r
rootStore	src/index.js	/^const rootStore = configureStore()$/;"	r
sagaMiddleware	src/configureStore.js	/^  const sagaMiddleware = createSagaMiddleware()$/;"	r
selectActiveHosts	src/ducks/hosts.js	/^export const selectActiveHosts = R.pipe($/;"	r
selectActiveTags	src/ducks/tags.js	/^export const selectActiveTags = R.pipe(selectTags, R.filter(R.identity), R.keys)$/;"	r
selectApiData	src/services/api.js	/^const selectApiData = ({$/;"	r
selectFeed	src/ducks/feed.js	/^export const selectFeed = R.prop(SLICE)$/;"	r
selectFeedItem	src/ducks/feed.js	/^export const selectFeedItem = key =>$/;"	r
selectFeedParameters	src/sagas.js	/^const selectFeedParameters = state => ({$/;"	r
selectHosts	src/ducks/hosts.js	/^export const selectHosts = R.prop(SLICE)$/;"	r
selectInactiveTags	src/ducks/tags.js	/^export const selectInactiveTags = R.always([])$/;"	r
selectOffset	src/ducks/feed.js	/^export const selectOffset = state => {$/;"	r
selectTags	src/ducks/tags.js	/^export const selectTags = R.prop(SLICE)$/;"	r
store	src/configureStore.js	/^  const store = createStore($/;"	r
stringify	src/services/text.js	/^export const stringify = R.cond([$/;"	r
swUrl	src/registerServiceWorker.js	/^      const swUrl = `${process.env.PUBLIC_URL}\/service-worker.js`;$/;"	r
toggleHost	src/ducks/hosts.js	/^export const toggleHost = host => ({$/;"	r
toggleTag	src/ducks/tags.js	/^export const toggleTag = tag => ({$/;"	r
url	src/services/url.test.js	/^  const url = 'http:\/\/example.com\/get'$/;"	r
