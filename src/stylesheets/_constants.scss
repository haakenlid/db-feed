// constants and scss mixins

// COLOUR CONSTANTS
$sol-red: #e20613;
$sol-blue: #455c7b;
$sol-dark-blue: darken($sol-blue, 20);
$sol-light-blue: lighten($sol-blue, 30);

// SIZE CONSTANTS
$base-font-size: 16px;
$breakpoints: (S: 400px, M: 700px, L: 1500px);
$padding: 0.8rem;

// PLACEHOLDER CLASSES
%body-text {
  font-family: "Roboto", sans-serif;
  font-weight: 400;
}
%heading-text {
  font-family: "Roboto Condensed", sans-serif;
  font-weight: 300;
}

// MIXINS
@mixin fullscreen() {
  // this is a mixin instead of a placeholder class so that it can be used
  // inside media queries.
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: unset;
  width: unset;
}

// breakpoint mixin which trigger on either height or width
// usage example:
// @include smaller-than(L) { color: salmon }
@mixin smaller-than($key) {
  $screen-size: map-get($breakpoints, $key);
  @media screen and (max-width: $screen-size), (max-height: $screen-size) {
    @content;
  }
}

// breakpoint mixin which trigger on either height or width
// usage example:
// @include larger-than(S) { color: lawngreen }
@mixin larger-than($key) {
  $screen-size: map-get($breakpoints, $key);
  @media screen and (min-width: $screen-size), (min-height: $screen-size) {
    @content;
  }
}

// use css filter for drop shadows instead of box-shadow or text-shadow
@mixin shadow($size: 1em, $color: rgba(black, 0.5)) {
  filter: drop-shadow(0.01 * $size 0.02 * $size 0.02 * $size $color);
}
